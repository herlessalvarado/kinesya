{"version":3,"sources":["helpers/user_mapper.ts","components/UserDetails.tsx","views/Profile.tsx","utils/constants.ts","network/axiosConfig.ts","network/UserService.ts"],"names":["mapUserDTOToViewModel","user","age","toString","referencePhotos","map","url","file","process","Array","profilePhoto","bannerPhoto","name","description","price","phone","location","tags","height","characteristics","weight","eyes","hair","fakeBoobs","birthday","format","Date","DATE_FORMAT","birthPlace","zodiac","measurements","orientation","ethnicity","mapViewModelToUserRequest","formData","FormData","forEach","photo","append","differenceInCalendarDays","parse","tag","JSON","stringify","useStyles","makeStyles","theme","createStyles","container","textAlign","backgroundColor","width","boxSizing","cover","display","position","overflow","zIndex","coverPhoto","objectFit","profile","border","borderRadius","margin","marginLeft","marginRight","container2","flexGrow","grid","box","breakInside","paddingLeft","wordWrap","info","container3","columns","columnGap","breakpoints","down","box2","padding","button","spacing","color","root","UserByUsername","props","classes","Fragment","CssBaseline","className","CardMedia","component","image","Typography","variant","gutterBottom","Grid","item","xs","style","Button","reference","index","key","alt","src","Profile","username","useParams","useState","setUser","useEffect","active","getUserByUsername","then","res","DISTRICTS","SERVICES","Zodiac","Ethnicities","Orientations","IMAGE_LIMITS","DEFAULT_PHOTO","MAX_STEPS_PROFILE","headers","Authorization","getJWT","handlerLogOutError","err","AuthOff","axios","defaults","baseURL","getNewToken","post","refresh_token","getRefreshToken","result","AuthOn","data","token","catch","_getUserByToken","get","response","a","logInUser","email","password","signUp","_updateUser","put","message","updateUser","getUserByToken","getUsersByDistrict","district","params","getUsersByPaginator","page","limit"],"mappings":"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","file":"static/js/13.e6bc6a7b.chunk.js","sourcesContent":["import { UserDTO } from \"../dto/user\"\nimport { UserViewModel } from \"../models/user\"\nimport { format, parse, differenceInCalendarDays } from \"date-fns\"\nimport { Photo } from \"../components/UploadImage\"\nimport { DATE_FORMAT } from \"../utils/constants\"\n\nexport function mapUserDTOToViewModel(user: UserDTO) {\n    const result: UserViewModel = {\n        age: user.age?.toString() || \"\",\n        referencePhotos: !!user.referencePhotos\n            ? user.referencePhotos.map(\n                  (url): Photo => ({\n                      file: \"\",\n                      url: process.env.REACT_APP_API_URL + url,\n                  })\n              )\n            : Array<Photo>(),\n        profilePhoto: !!user.profilePhoto\n            ? Array<Photo>({\n                  file: \"\",\n                  url: process.env.REACT_APP_API_URL + user.profilePhoto,\n              })\n            : Array<Photo>(),\n        bannerPhoto: !!user.bannerPhoto\n            ? Array<Photo>({\n                  file: \"\",\n                  url: process.env.REACT_APP_API_URL + user.bannerPhoto,\n              })\n            : Array<Photo>(),\n        name: user.name || \"\",\n        description: user.description || \"\",\n        price: user.price?.toString() || \"\",\n        phone: user.phone?.toString() || \"\",\n        location: user.location || \"\",\n        tags: user.tags || [],\n        height: user.characteristics?.height || \"\",\n        weight: user.characteristics?.weight || \"\",\n        eyes: user.characteristics?.eyes || \"\",\n        hair: user.characteristics?.hair || \"\",\n        fakeBoobs: user.characteristics?.fakeBoobs || false,\n        birthday: !!user.characteristics?.birthday\n            ? user.characteristics.birthday\n            : format(new Date(), DATE_FORMAT),\n        birthPlace: user.characteristics?.birthPlace || \"\",\n        zodiac: user.characteristics?.zodiac || \"\",\n        measurements: user.characteristics?.measurements || \"\",\n        orientation: user.characteristics?.orientation || \"\",\n        ethnicity: user.characteristics?.ethnicity || \"\",\n    }\n    return result\n}\n\nexport function mapViewModelToUserRequest(user: UserViewModel) {\n    let formData = new FormData()\n    user.referencePhotos?.forEach((photo) => {\n        if (!!photo.file) formData.append(\"references\", photo.file)\n    })\n    user.profilePhoto?.forEach((photo) => {\n        if (!!photo.file) formData.append(\"profile\", photo.file)\n    })\n    user.bannerPhoto?.forEach((photo) => {\n        if (!!photo.file) formData.append(\"banner\", photo.file)\n    })\n    formData.append(\"name\", user.name!)\n    formData.append(\n        \"age\",\n        differenceInCalendarDays(\n            new Date(),\n            parse(user.birthday, DATE_FORMAT, new Date())\n        ).toString()\n    )\n    formData.append(\"description\", user.description!)\n    formData.append(\"price\", user.price!)\n    formData.append(\"phone\", user.phone!)\n    formData.append(\"location\", user.location!)\n    formData.append(\"isPublic\", \"true\")\n    user.tags?.forEach((tag) => {\n        formData.append(\"tags\", tag)\n    })\n    const characteristics = {\n        height: user.height,\n        weight: user.weight,\n        eyes: user.eyes,\n        hair: user.hair,\n        fakeBoobs: user.fakeBoobs,\n        zodiac: user.zodiac,\n        orientation: user.orientation,\n        birthPlace: user.birthPlace,\n        measurements: user.measurements,\n        ethnicity: user.ethnicity,\n        birthday: parse(user.birthday, DATE_FORMAT, new Date()),\n    }\n    formData.append(\"characteristics\", JSON.stringify(characteristics))\n    return formData\n}\n","import React from \"react\"\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { CssBaseline } from \"@material-ui/core\"\nimport { UserViewModel } from \"../models/user\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            textAlign: \"center\",\n            backgroundColor: \"black\",\n            width: \"100%\",\n            boxSizing: \"border-box\",\n        },\n        cover: {\n            display: \"block\",\n            position: \"relative\",\n            height: \"250px\",\n            overflow: \"hidden\",\n            zIndex: 1,\n        },\n        coverPhoto: {\n            objectFit: \"cover\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n        profile: {\n            display: \"block\",\n            position: \"relative\",\n            border: `#BF953F solid 3px`,\n            borderRadius: \"5px\",\n            width: \"200px\",\n            height: \"200px\",\n            objectFit: \"contain\",\n            margin: `-150px 0 10px 20px`,\n            zIndex: 999,\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n        profilePhoto: {\n            objectFit: \"cover\",\n            width: \"100%\",\n            height: \"100%\",\n        },\n        name: {\n            textAlign: \"center\",\n        },\n        container2: {\n            flexGrow: 1,\n        },\n        grid: {\n            \"&.MuiGrid-spacing-xs-3\": {\n                width: \"100%\",\n            },\n        },\n        box: {\n            width: \"100%\",\n            overflow: \"hidden\",\n            breakInside: \"avoid\",\n            paddingLeft: \"2vw\",\n            wordWrap: \"break-word\",\n        },\n        info: {\n            textAlign: \"left\",\n        },\n        container3: {\n            width: \"100%\",\n            columns: \"4\",\n            columnGap: \"2vw\",\n            [theme.breakpoints.down(\"sm\")]: {\n                columns: \"1\",\n            },\n        },\n        box2: {\n            width: \"100%\",\n            padding: \"10px\",\n            overflow: \"hidden\",\n            breakInside: \"avoid\",\n            \"& img\": {\n                objectFit: \"contain\",\n                height: \"100%\",\n                width: \"100%\",\n                border: \"1px solid rgba(0, 0, 0, 0.12)\",\n                borderRadius: \"4px\",\n                padding: \"5px\",\n            },\n        },\n        button: {\n            margin: theme.spacing(1),\n            border: `1px solid #BF953F`,\n            backgroundColor: \"black\",\n            color: \"#BF953F\",\n            \"&:hover\": {\n                backgroundColor: \"#BF953F\",\n                color: \"black\",\n            },\n        },\n        root: {\n            \"& > *\": {\n                margin: theme.spacing(1),\n            },\n        },\n    })\n)\n\ninterface UserByUsernameProps {\n    user: UserViewModel\n}\n\nexport default function UserByUsername(props: UserByUsernameProps) {\n    const classes = useStyles()\n    return (\n        <React.Fragment>\n            <CssBaseline>\n                <div className={classes.container}>\n                    <div className={classes.cover}>\n                        <CardMedia\n                            component=\"img\"\n                            image={props.user.bannerPhoto[0].url}\n                            className={classes.coverPhoto}\n                        />\n                    </div>\n                    <div className={classes.profile}>\n                        <CardMedia\n                            component=\"img\"\n                            image={props.user.profilePhoto[0].url}\n                            className={classes.profilePhoto}\n                        />\n                    </div>\n                    <div className={classes.name}>\n                        <Typography variant=\"h5\" gutterBottom>\n                            {props.user.name}\n                        </Typography>\n                    </div>\n                    <div className={classes.container2}>\n                        <Grid container spacing={3} className={classes.grid}>\n                            <Grid item xs={6}>\n                                <div className={classes.box}>\n                                    <Typography\n                                        style={{ color: \"white\", textAlign: \"justify\" }}\n                                        gutterBottom\n                                        variant=\"h5\"\n                                    >\n                                        {props.user.name}\n                                    </Typography>\n                                </div>\n                                <div className={classes.box}>\n                                    <Typography\n                                        style={{ color: \"white\", textAlign: \"justify\" }}\n                                        gutterBottom\n                                    >\n                                        {props.user.description}\n                                    </Typography>\n                                </div>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Grid container spacing={3} className={classes.grid}>\n                                    <Grid item xs={6}>\n                                        <div className={classes.info}>\n                                            <div>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        marginRight: \"10px\",\n                                                        color: \"white\",\n                                                    }}\n                                                >\n                                                    Interesada en:\n                                                </Typography>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        color: \"darkGray\",\n                                                    }}\n                                                >\n                                                    {props.user.orientation}\n                                                </Typography>\n                                            </div>\n                                            <div>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        marginRight: \"10px\",\n                                                        color: \"white\",\n                                                    }}\n                                                >\n                                                    Distrito y ciudad:\n                                                </Typography>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        color: \"darkGray\",\n                                                    }}\n                                                >\n                                                    {props.user.location}\n                                                </Typography>\n                                            </div>\n                                            <div>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        marginRight: \"10px\",\n                                                        color: \"white\",\n                                                    }}\n                                                >\n                                                    Sexo:\n                                                </Typography>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        color: \"darkGray\",\n                                                    }}\n                                                >\n                                                    Mujer\n                                                </Typography>\n                                            </div>\n                                            <div>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        marginRight: \"10px\",\n                                                        color: \"white\",\n                                                    }}\n                                                >\n                                                    Lugar de Nacimiento:\n                                                </Typography>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        color: \"darkGray\",\n                                                    }}\n                                                >\n                                                    {props.user.birthPlace}\n                                                </Typography>\n                                            </div>\n                                            <div>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        marginRight: \"10px\",\n                                                        color: \"white\",\n                                                    }}\n                                                >\n                                                    Edad:\n                                                </Typography>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        color: \"darkGray\",\n                                                    }}\n                                                >\n                                                    {props.user.age}\n                                                </Typography>\n                                            </div>\n                                            <div>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        marginRight: \"10px\",\n                                                        color: \"white\",\n                                                    }}\n                                                >\n                                                    Signo Zodiacal:\n                                                </Typography>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        color: \"darkGray\",\n                                                    }}\n                                                >\n                                                    {props.user.zodiac}\n                                                </Typography>\n                                            </div>\n                                            <div>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        marginRight: \"10px\",\n                                                        color: \"white\",\n                                                    }}\n                                                >\n                                                    Ojos:\n                                                </Typography>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        color: \"darkGray\",\n                                                    }}\n                                                >\n                                                    {props.user.eyes}\n                                                </Typography>\n                                            </div>\n                                        </div>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <div className={classes.info}>\n                                            <div>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        marginRight: \"10px\",\n                                                        color: \"white\",\n                                                    }}\n                                                >\n                                                    Medidas:\n                                                </Typography>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        color: \"darkGray\",\n                                                    }}\n                                                >\n                                                    {props.user.measurements}\n                                                </Typography>\n                                            </div>\n                                            <div>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        marginRight: \"10px\",\n                                                        color: \"white\",\n                                                    }}\n                                                >\n                                                    Altura:\n                                                </Typography>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        color: \"darkGray\",\n                                                    }}\n                                                >\n                                                    {props.user.height + \"cm\"}\n                                                </Typography>\n                                            </div>\n                                            <div>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        marginRight: \"10px\",\n                                                        color: \"white\",\n                                                    }}\n                                                >\n                                                    Peso:\n                                                </Typography>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        color: \"darkGray\",\n                                                    }}\n                                                >\n                                                    {props.user.weight + \"kg\"}\n                                                </Typography>\n                                            </div>\n                                            <div>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        marginRight: \"10px\",\n                                                        color: \"white\",\n                                                    }}\n                                                >\n                                                    Etnia:\n                                                </Typography>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        color: \"darkGray\",\n                                                    }}\n                                                >\n                                                    {props.user.ethnicity}\n                                                </Typography>\n                                            </div>\n                                            <div>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        marginRight: \"10px\",\n                                                        color: \"white\",\n                                                    }}\n                                                >\n                                                    Color de cabello:\n                                                </Typography>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        color: \"darkGray\",\n                                                    }}\n                                                >\n                                                    {props.user.hair}\n                                                </Typography>\n                                            </div>\n                                            <div>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        marginRight: \"10px\",\n                                                        color: \"white\",\n                                                    }}\n                                                >\n                                                    Tetas falsas:\n                                                </Typography>\n                                                <Typography\n                                                    style={{\n                                                        display: \"inline-block\",\n                                                        color: \"darkGray\",\n                                                    }}\n                                                >\n                                                    {props.user.fakeBoobs ? \"Si\" : \"No\"}\n                                                </Typography>\n                                            </div>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={3} className={classes.grid}>\n                            <Grid item xs={6}>\n                                <Button className={classes.button}>\n                                    Precio: S/. {props.user.price}\n                                </Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button className={classes.button}>\n                                    Teléfono: {props.user.phone}\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={3} className={classes.grid}>\n                            <Grid item xs={12}>\n                                <Typography\n                                    style={{ display: \"inline-block\", color: \"white\" }}\n                                    variant=\"h6\"\n                                >\n                                    Principales Servicios:\n                                </Typography>\n                                <div className={classes.root}>\n                                    {props.user.tags?.map((reference, index) => (\n                                        <Button key={index} color=\"secondary\">\n                                            {reference}\n                                        </Button>\n                                    ))}\n                                </div>\n                            </Grid>\n                        </Grid>\n                        <div className={classes.container3}>\n                            {props.user.referencePhotos?.map((reference, index) => (\n                                <div key={reference.url} className={classes.box2}>\n                                    <img key={index} alt=\"complex\" src={reference.url} />\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </CssBaseline>\n        </React.Fragment>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport UserDetails from \"../components/UserDetails\"\nimport { getUserByUsername } from \"../network/UserService\"\nimport { UserDTO } from \"../dto/user\"\nimport { UserViewModel } from \"../models/user\"\nimport { mapUserDTOToViewModel } from \"../helpers/user_mapper\"\n\nexport default function Profile() {\n    let { username } = useParams()\n    const [user, setUser] = useState<UserViewModel>()\n\n    useEffect(() => {\n        let active = true\n        if (active) {\n            getUserByUsername(username!).then((res: UserDTO) => {\n                setUser(mapUserDTOToViewModel(res))\n            })\n        }\n        return () => {\n            active = false\n        }\n    }, [username])\n\n    return <React.Fragment>{!!user && <UserDetails user={user!} />}</React.Fragment>\n}\n","export const DISTRICTS = [\n    \"Breña\",\n    \"La Victoria\",\n    \"Centro de Lima\",\n    \"Lince\",\n    \"Rímac\",\n    \"Barranco\",\n    \"Jesús María\",\n    \"La Molina\",\n    \"Magdalena\",\n    \"Miraflores\",\n    \"Pueblo Libre\",\n    \"San Borja\",\n    \"San Isidro\",\n    \"San Luis\",\n    \"San Miguel\",\n    \"Santiago de Surco\",\n    \"Surquillo\",\n    \"Ate\",\n    \"Cieneguilla\",\n    \"Chaclacayo\",\n    \"San Juan de Lurigancho\",\n    \"El Agustino\",\n    \"Chosica\",\n    \"Santa Anita\",\n    \"Ancón\",\n    \"Carabayllo\",\n    \"Comas\",\n    \"Independencia\",\n    \"Los Olivos\",\n    \"Puente Piedra\",\n    \"San Martín de Porres\",\n    \"Santa Rosa\",\n    \"Chorrillos\",\n    \"Lurín\",\n    \"Pachacamac\",\n    \"Pucusana\",\n    \"Punta Hermosa\",\n    \"Punta Negra\",\n    \"San Bartolo\",\n    \"San Juan de Miraflores\",\n    \"Santa María del Mar\",\n    \"Villa el Salvador\",\n    \"Villa María del Triunfo\",\n]\nexport const SERVICES = [\n    \"Seleccionar\",\n    \"Trato de pareja\",\n    \"Sexo oral\",\n    \"Sexo anal\",\n    \"Oral con condón\",\n    \"Oral natural\",\n    \"Eyaculación facial\",\n    \"Masajes\",\n    \"Fantasías\",\n    \"Trío\",\n    \"Beso Negro\",\n    \"Fetichismo\",\n    \"Sado duro\",\n    \"Sado suave\",\n]\n\nexport const Zodiac = [\n    \"\",\n    \"Aries\",\n    \"Tauro\",\n    \"Géminis\",\n    \"Cáncer\",\n    \"Leo\",\n    \"Virgo\",\n    \"Libra\",\n    \"Escorpio\",\n    \"Sagitario\",\n    \"Capricornio\",\n    \"Acuario\",\n    \"Piscis\",\n]\n\nexport const Ethnicities = [\"\", \"Andinas\", \"Morenas\", \"Piel Blanca\", \"Trigueña\"]\n\nexport const Orientations = [\"\", \"Heterosexual\", \"Homosexual\", \"Bisexual\", \"Trans\"]\nexport const IMAGE_LIMITS = 4\nexport const MAX_AGE = 99\nexport const MIN_PRICE = 0.0\nexport const DEFAULT_PHOTO =\n    \"https://www.travelcontinuously.com/wp-content/uploads/2018/04/empty-avatar.png\"\nexport const MAX_STEPS_PROFILE = 3\nexport const DATE_FORMAT = \"MM/dd/yyyy\"\n","import { getJWT, AuthOff } from \"../cache/CookieManager\"\nimport { AxiosError } from \"axios\"\n\nexport default () => ({ headers: { Authorization: `Bearer ${getJWT()}` } })\nexport function handlerLogOutError(err: AxiosError) {\n    AuthOff()\n    return err\n}\nexport function handlerAuthError() {}\n","import axios from \"axios\"\nimport headers, { handlerLogOutError } from \"./axiosConfig\"\nimport { getRefreshToken, AuthOn } from \"../cache/CookieManager\"\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\nexport const getNewToken = () => {\n    return axios\n        .post(\"/users/token\", { refresh_token: getRefreshToken() })\n        .then((result) => {\n            AuthOn(result.data.token, result.data.refresh_token)\n            return result\n        })\n        .catch(handlerLogOutError)\n}\n\nexport const _getUserByToken = () => {\n    return axios.get(\"/users/me\", headers()).then((response) => {\n        return response.data\n    })\n}\n\nexport async function getUsers() {\n    const res = await axios.get(\"/users\")\n    return res.data\n}\n\nexport async function getUserByUsername(username: string) {\n    return axios.get(\"/users/\" + username).then((response) => {\n        return response.data\n    })\n}\n\nexport async function logInUser(email: string, password: string) {\n    return axios.post(\"/users/login\", { email, password }).then((result) => {\n        AuthOn(result.data.token, result.data.refresh_token)\n        return result.data\n    })\n}\n\nexport async function signUp(username: string, email: string, password: string): Promise<string> {\n    return axios.post(\"/users\", { username, email, password }).then((result) => {\n        AuthOn(result.data.token, result.data.refresh_token)\n        return result.data\n    })\n}\n\nexport async function _updateUser(formData: any) {\n    return axios.put(\"/users\", formData, headers()).then((res) => res.data.message)\n}\nexport async function updateUser(formData: any) {\n    return _updateUser(formData).catch(() => getNewToken().then(() => _updateUser(formData)))\n}\n\nexport async function getUserByToken() {\n    return _getUserByToken().catch(() => getNewToken().then(() => _getUserByToken()))\n}\n\nexport async function getUsersByDistrict(district: string): Promise<any> {\n    return axios\n        .get(\"/users\", {\n            params: {\n                location: district,\n            },\n        })\n        .then((response) => {\n            return response.data\n        })\n}\n\nexport async function getUsersByPaginator(page: Number, limit: Number) {\n    return axios\n        .get(\"/users\", {\n            params: {\n                page: page,\n                limit: limit,\n            },\n        })\n        .then((response) => {\n            return response.data\n        })\n}\n"],"sourceRoot":""}